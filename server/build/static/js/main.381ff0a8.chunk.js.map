{"version":3,"sources":["createDeck.js","components/Card.js","Chat.js","components/CardInactive.js","components/Player.js","components/MyPlayer.js","components/useStateWithPromise.js","components/Discard.js","GameSpace.js","components/GameStart.js","StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["suits","valName","display","suitSrc","createDeck","deck","index","suit","number","pts","push","name","value","points","img","adjustedValue","adjSuit","Card","props","thisCard","useRef","useEffect","getRef","style","left","ref","type","className","cd","checked","onChange","handleChange","src","process","Chat","useState","socket","message","setMessage","chatContent","setChat","teams","setTeams","container","chats","on","msg","addChat","username","body","tr","tm","declarers","data","chat","length","concat","current","height","clientHeight","scrollTop","id","map","team","i","score","usernames","c","action","autoComplete","evt","target","onClick","e","preventDefault","emit","CardInactive","animateCard","width","TweenMax","fromTo","opacity","top","win","Player","cards","setCards","setUsername","winner","setWinner","playerId","thisBox","main","clientWidth","reducer","state","item","slice","items","filter","ele","indices","includes","MyPlayer","initialState","useReducer","setState","resolverRef","handleSetState","useCallback","stateAction","Promise","resolve","useReducerWithPromise","playCards","setPlayCards","cardHistory","setCardHistory","historyVisible","setHistory","mouseOver","setMouse","playDetails","currentSuit","switching","turn","plays","element","playHand","prevPlay","temp","positions","calculateCardPosition","hand","forEach","obj","dom","position","prevPlayed","prev","sendMessage","color","started","repositionCards","join","start","n","total","tempInt","interval","Math","min","xPos","yPos","card","to","x","y","borderRadius","arr","arraysEqual","flexWrap","setTimeout","onMouseEnter","onMouseLeave","checkCard","disabled","result","r","findIndex","subtitle","Discard","setPoints","adding","setAdding","discard","addPoints","visible","GameSpace","setStarted","discardVisible","setDiscard","usrnm","popUp","href","togglePop","history","game","roundIndex","declarer","starter","trumpSuit","code","userType","CreateGame","rank","settings","setSettings","defaultValue","max","res","setRoom","JoinGame","setID","Instructions","GameStart","StartPage","tms","playerSettings","setUserType","finished","setTeam","replace","nm","socketIOClient","App","setDeck","setPopUp","gameHistory","setGameHistory","loggedIn","login","setLogin","trumpRank","gameDetails","setGame","trumpValue","alert","usr","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381ff0a8.chunk.js","sourcesContent":["let suits = ['spades', 'hearts', 'clubs', 'diamonds'];\nlet valName = ['-1', '0', '1', '2', '3', '4' , '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace'];\nlet display = ['-1', '0', '1', '2', '3', '4' , '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\nconst suitSrc = ['/spades.png', '/hearts.png', '/clubs.png', '/diamonds.png'];\n\nfunction createDeck() {\n    const deck = [];\n    let index = 1;\n    for(let suit = 0; suit < 4; suit++) {\n      for(let number = 2; number < 15; number++) {\n        let pts = 0;\n        if(number === 5) {\n          pts = 5;\n        } else if(number === 10 || number === 13) {\n          pts = 10;\n        }\n        deck.push({name: valName[number] + ' of ' + suits[suit], suit: suits[suit], value: number, display: display[number], points: pts, index: index, img: suitSrc[suit], adjustedValue: number, adjSuit: suit});\n        index++;\n      }\n    }\n    deck.push({name: 'small joker', suit: 'trump', value: 100, display: 'JOKER', points: 0, index: index, img: '', adjustedValue: 100, adjSuit: 'trump'});\n    index++;\n    deck.push({name: 'big joker', suit: 'trump', value: 101, display: 'JOKER', points: 0, index: index, img: '', adjustedValue: 101, adjSuit: 'trump'});\n    return deck;\n}\n\nfunction getCard(index) {\n  let deck = createDeck();\n  return deck.find(cd => cd.index === index);\n}\n\nexport {createDeck, getCard}","import React, { useState, useEffect, useRef } from 'react';\n\nfunction Card(props) {\n\n\tconst thisCard = useRef(null);\n\n\tuseEffect(() => {\n\t\tprops.getRef(thisCard);\n\t}, [thisCard]);\n\n    return (\n        <label style={{left: props.left + 'px'}} ref={thisCard}>\n            <input type=\"checkbox\" name=\"card-picked\" className=\"card-checkbox\" value={props.cd.index} checked={props.checked} onChange={props.handleChange}/>\n            <div className=\"card-container\">\n                <p className={\"card-number\" + (props.cd.value < 100 ? '' : ' joker') + (props.cd.value === 101 ? ' red' : '')}>{props.cd.display}</p>\n                {props.cd.value < 100 ? <img className=\"card-suit\" src={process.env.PUBLIC_URL + props.cd.img} /> : ''}\n            </div>\n        </label>\n    );\n}\n\nexport default Card;","import react, {useEffect, useState, useRef} from 'react';\n\nfunction Chat(props) {\n\n  const [socket, setSocket] = useState(props.socket);\n  const [message, setMessage] = useState('');\n  const [chatContent, setChat] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const container = useRef(null);\n  const chats = useRef(null);\n\n  useEffect(() => {\n    socket.on('chat message', function(msg){\n      addChat(msg.username, msg.body, '');\n    });\n    socket.on('setup game', function(tr) {\n      let tm = tr.teams;\n      tm[0].declarers = (tr.declarers === 0);\n      tm[1].declarers = (tr.declarers === 1);\n      setTeams(tm);\n    });\n    socket.on('user joined', function(data) {\n      addChat(data.username, data.username + ' has joined the game.', 'connection-msg');\n    });\n    socket.on('user left', function(data) {\n      addChat(data.username, data.username + ' has left the game.', 'disconnection-msg');\n    });\n  }, []);\n\n  const handleChange = (evt) => {\n    setMessage(evt.target.value);\n  }\n\n  const submitChat = (e) => {\n    let msg = message;\n    e.preventDefault(); // prevents page reloading\n    socket.emit('chat message', {body: msg, username: props.username});\n    setMessage('');\n  }\n\n  const addChat = (username, msg, style) => {\n    let str;\n    if(style.length === 0) {\n      str = username + \": \" + msg;\n    } else {\n      str = msg;\n    }\n    let chat = {body: str, username: username, style: style};\n    setChat(chatContent => chatContent.concat(chat));\n    if(chats.current && container.current) {\n      let height = chats.current.clientHeight;\n      container.current.scrollTop = height;\n    }\n  }\n\n  return (\n    <aside id=\"chat\">\n      <div id=\"current-users\">\n        <div id=\"all-users\">\n          {teams.length > 0 ? \n            teams.map((team, i) => {\n              return (\n                <div key={i}>\n                  <h2>{(team.declarers ? \"Declarers\" : \"Opponents\") + \" – \" + team.score}</h2>\n                  <li>{team.usernames[0]}</li>\n                  <li>{team.usernames[1]}</li>\n                </div>\n              );\n            })\n            :\n            ''\n          }\n        </div>\n      </div>\n      <div id=\"chat-container\">\n        <div id=\"messages-container\" ref={container}>\n          <ul id=\"messages\" ref={chats}>\n            {chatContent.length > 0 ? chatContent.map((c, i) => <li className={'chat-msg ' + c.style} key={i}>{c.body}</li>) : ''}\n          </ul>\n        </div>\n        <form id=\"chatbox\" action=\"\">\n          <input id=\"m\" autoComplete=\"off\" value={message} onChange={handleChange} /><button onClick={submitChat}>Send</button>\n        </form>\n      </div>\n    </aside>\n  );\n}\n\nexport default Chat;","import React, { useState, useEffect, useRef } from 'react';\nimport {TweenMax} from 'gsap';\n\nfunction CardInactive(props) {\n\n\tconst thisCard = useRef(null);\n\n\tuseEffect(() => {\n\t\tanimateCard();\n\t}, [props.left]);\n\n\tconst animateCard = () => {\n\t\tlet width = props.width;\n\t\tif(props.id === '2') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, left: width - 30}, {opacity: 1, left: width/2});\n\t\t} else if(props.id === '3') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, top: -107}, {opacity: 1, top: 30});\n\t\t} else if(props.id === '4') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, left: 0}, {opacity: 1, left: width/2});\n\t\t} \n\t}\n\n    return (\n        <div className={\"card-container\" + (props.win ? \" winning\" : \"\")} ref={thisCard} style={props.left ? {left: props.left + 'px'} : {}}>\n            <p className={\"card-number\" + (props.cd.value < 100 ? '' : ' joker') + (props.cd.value === 101 ? ' red' : '')}>{props.cd.display}</p>\n            {props.cd.value < 100 ? <img className=\"card-suit\" src={process.env.PUBLIC_URL + props.cd.img} /> : ''}\n        </div>\n    );\n}\n\nexport default CardInactive;","import React, { useState, useEffect, useRef } from 'react';\nimport CardInactive from './CardInactive';\n\nfunction Player(props) {\n\tconst [cards, setCards] = useState([]);\n\tconst [username, setUsername] = useState('');\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [winner, setWinner] = useState(false);\n\tconst playerId = useRef(-1);\n\tconst thisBox = useRef(null);\n\n\tuseEffect(() => {\n\t\tif(props.main < 0) {\n\t\t\tplayerId.current = props.id - 1;\n\t\t} else {\n\t\t\tplayerId.current =  (props.id - 1 + props.main) % 4;\n\t\t}\n\t\tsocket.on('hand played', function(data) {\n\t\t\tif(data.id === playerId.current) {\n\t\t\t\tsetCards(data.cards);\n\t\t\t\tsetUsername(data.username);\n\t\t\t}\n\t\t});\n\t\tsocket.on('win round', function(win) {\n\t\t\tif(win === playerId.current) {\n\t\t\t\tsetWinner(true);\n\t\t\t}\n\t\t});\n\t\tsocket.on('new round', function() {\n\t\t\tsetCards(cards => []);\n\t\t\tsetWinner(false);\n\t\t});\n\t\tsocket.on('end game', function() {\n\t\t\tsetCards(cards => []);\n\t\t\tsetWinner(false);\n\t\t\tsetUsername('');\n\t\t});\n\t}, []);\n\n    return (\n        <div className={\"player-\" + props.id} ref={thisBox}>\n            <h2>{username}</h2>\n            <div id={\"player-\" +props.id+\"-cards\"}>\n                {cards.map((c, i) => <CardInactive cd={c} key={c.index} win={winner} id={props.id} width={thisBox ? thisBox.current.clientWidth : 150}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Player;","import React, { useState, useEffect, useReducer, useRef } from 'react';\nimport Card from './Card';\nimport CardInactive from './CardInactive';\nimport {getCard} from '../createDeck';\nimport {TweenMax} from 'gsap';\nimport {useReducerWithPromise} from './useStateWithPromise';\n\nfunction MyPlayer(props) {\n    const [socket, setSocket] = useState(props.socket);\n    const [cards, setCards] = useReducerWithPromise(reducer, []);\n    const [playCards, setPlayCards] = useState([]);\n    const [cardHistory, setCardHistory] = useReducer(reducer, []);\n    const [historyVisible, setHistory] = useState(false);\n    const [mouseOver, setMouse] = useState(false);\n    const [winner, setWinner] = useState(false);\n    const playDetails = useRef({\n        currentSuit: '',\n        switching: false,\n        playerId: -1,\n        turn: false,\n        plays: 0\n    });\n    const element = useRef(null);\n    const playHand = useRef(null);\n    const prevPlay = useRef(null);\n\n\n    useEffect(() => {\n    \tsocket.on('my hand', function(data) {\n\t        playDetails.current = {...playDetails.current, playerId: data.playerId};\n\t        let temp = [];\n\t    \tlet positions = calculateCardPosition(0);\n\t    \tdata.hand.forEach((cd, i) => {\n\t\t\t\ttemp.push({obj: cd, dom: {}, position: positions[i], checked: false});\n\t\t\t});\n\t    \tsetCards({type: 'replace', items: temp});\n            if(data.prevPlayed) {\n                data.prevPlayed.forEach(prev => {\n                    setCardHistory({type: 'add', item: {obj: prev, left: prevPlay.current.clientWidth / 2}});\n                });\n            }\n      \t});\n        socket.on('swap cards', function(data) {\n        \tplayDetails.current = {...playDetails.current, switching: true, turn: true, playerId: data};\n        \tprops.sendMessage({body: \"Select 6 cards to discard.\", color: 'green'});\n        });\n        socket.on('next turn', function(data) {\n        \tif(data.turn === playDetails.current.playerId) {\n        \t\tplayDetails.current = {...playDetails.current, turn: true, currentSuit: data.suit, plays: data.plays};\n        \t} \n        })\n        socket.on('win round', function(win) {\n        \tif(win === playDetails.current.playerId) {\n\t\t\t\tsetWinner(true);\n\t\t\t}\n        });\n        socket.on('new round', function(started) {\n        \tif(started !== playDetails.current.playerId) {\n                //setCardHistory(cardHistory => cardHistory.concat(playCards));\n        \t\tsetPlayCards(playCards => []);\n        \t\tsetWinner(false);\n        \t}\n        });\n        socket.on('end game', function() {\n            setCardHistory({type: 'clear'});\n            setPlayCards([]);\n            setCards({type: 'clear'});\n        });\n    }, []);\n\n    useEffect(() => {\n    \tif(cards.length > 0) {\n    \t\trepositionCards();\n    \t}\n    }, [cards.join(\",\")]);\n\n    const calculateCardPosition = (index) => {\n        let positions = [];\n        let start = 0;\n        if(index === 0) {\n    \t\tlet n = cards.length;\n            let total = element.current ? element.current.clientWidth : 681;\n            let tempInt = (total - 80)/(n-1);\n            let interval = Math.min(tempInt, 80);\n            if (total > n * 80) {\n                start = (total - n * 80) / 2;\n            }\n            for(let i = 0; i < n; i++) {\n                positions.push(start + interval*i);\n            }\n        } else {\n            let n = cardHistory.length;\n            let total = prevPlay.current ? prevPlay.current.clientWidth : 60;\n            let tempInt = (total - 60)/(n-1);\n            let interval = Math.min(tempInt, 70);\n            if (total > n * 70) {\n                start = (total - n * 70) / 2;\n            }\n            for(let i = 0; i < n; i++) {\n                positions.push(start + interval*i + 35);\n            }\n        }\n        \n        return positions;\n    }\n\n    const checkCard = (i) => {\n    \tlet temp = cards[i];\n    \ttemp.checked = !temp.checked;\n    \tsetCards({type: 'update', index: i, item: temp});\n    }\n\n    const getRef = (ref, i, type) => {\n        if(type === 'active') {\n            let temp = cards[i];\n            temp.dom = ref;\n    \t    setCards({type: 'update', index: i, item: temp});\n        } else {\n            let temp = cardHistory[i];\n            temp.dom = ref;\n            setCardHistory({type: 'update', index: i, item: temp});\n        }\n    }\n\n    const handleMouseEnter = (evt) => {\n        if(!historyVisible) {\n            setMouse(true);\n        }\n    }\n\n    const handleMouseLeave = (evt) => {\n        setMouse(false);\n    }\n\n    const confirmPlay = (evt) => {\n        evt.preventDefault();\n        let result = cards.filter(cd => cd.checked);\n        result = result.map(cd => cd.obj);\n        if(playDetails.current.switching) {\n            if(result.length > 6) {\n                props.sendMessage({body: \"You can only pick 6 cards!\", color: 'red'});\n            } else if(result.length < 6) {\n                props.sendMessage({body: \"You didn't select 6 cards!\", color: 'red'});\n            } else {\n                props.sendMessage({body: \"\", color: ''});\n                let indices = [];\n                result.forEach(r => {\n                    let c = cards.findIndex(cd => cd.obj.index === r.index);\n                    animateCard(c);\n                    indices.push(c);\n                })\n                setTimeout(function(){ \n                    setCards({type: 'filter', indices: indices});\n                }, 1000);\n                socket.emit('submit swap cards', {cards: result.map(cd => cd.index), id: playDetails.current.playerId});\n                playDetails.current = {...playDetails.current, switching: false};\n            }\n        } else if(playDetails.current.turn) {\n            if(result.length > 1) {\n                props.sendMessage({body: \"You can only play one card!\", color: 'red'});\n            } else if(result.length < 1) {\n                props.sendMessage({body: \"You didn't select a card!\", color: 'red'});\n            } else {\n                const suit = result[0].adjSuit;\n                if(suit === playDetails.current.currentSuit || cards.findIndex(cd => cd.obj.adjSuit === playDetails.current.currentSuit) < 0) { //can only play card if it follows rules\n                    setPlayCards(playCards => []);\n        \t\t\tsetWinner(false);\n                    let c = cards.findIndex(cd => cd.obj.index === result[0].index);\n                    let card = animateCard(c);\n                    setTimeout(function(){ \n                    \tsetCards({type: 'remove', index: c})\n                \t\tsetPlayCards(playCards => playCards.concat(card));\n                        setCardHistory({type: 'add', item: {obj: card, left: prevPlay.current.clientWidth / 2}});\n                \t\tplayDetails.current = {...playDetails.current, turn: false};\n                \t\tsocket.emit('submit hand', {cards: result.map(cd => cd.index), id: playDetails.current.playerId});\n                    }, 1000);\n                } else {\n                    props.sendMessage({body: \"You can't play that card!\", subtitle: 'You need to play ' + playDetails.current.currentSuit + '.', color: 'red'});\n                }\n            }\n        }\n    }\n    \n    const animateCard = (c) => {\n        let obj = cards[c];\n        obj.checked = false;\n        setCards({type: 'update', index: c, item: obj});\n        let xPos = element.current.clientWidth/2 - 31- cards[c].position;\n        let yPos = (playHand.current.clientHeight + 13) * -1;\n        let card = cards[c].obj;\n        TweenMax.to(obj.dom.current, 1, {x: xPos, y: yPos, width: '60px', height: '80px', borderRadius: '5px'});\n        return card;\n    }\n\n    const repositionCards = () => {\n    \tlet positions = calculateCardPosition(0);\n    \tif(!arraysEqual(positions, cards)) {\n\t    \tcards.forEach((cd, i) => {\n\t    \t\tlet temp = cd;\n\t    \t\ttemp.position = positions[i];\n\t    \t\tsetCards({type: 'update', index: i, item: temp});\n\t    \t});\n\t    }\n    }\n\n    const revealHistory = (evt) => {\n        if(!historyVisible) {\n            setHistory(true);\n            setMouse(false);\n            setTimeout(function() {\n                let positions = calculateCardPosition(1);\n                cardHistory.forEach((cd, i) => {\n                    let temp = cd;\n                    temp.left = positions[i];\n                    setCardHistory({type: 'update', index: i, item: temp});\n                });\n            }, 10);\n        } else {\n            cardHistory.forEach((cd, i) => {\n                let temp = cd;\n                temp.left = prevPlay.current.clientWidth / 2;\n                setCardHistory({type: 'update', index: i, item: temp});\n                //console.log(cardHistory);\n            });\n            setTimeout(function() {\n                setHistory(false);\n            }, 300);\n        }\n        //console.log(cardHistory);\n    }\n\n    return (\n        <div style={{width: '100%', display: 'flex', flexWrap: 'wrap'}}>\n            <div className=\"play\" ref={playHand}>\n                <div className=\"play-hand\">\n                    <p id=\"history-message\" style={mouseOver ? {opacity: 1} : {opacity: 0}}>Click to see play history</p>\n\t                <div className=\"play-hand-cards\" onClick={revealHistory} ref={prevPlay} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n\t                \t{historyVisible ? \n                            cardHistory.map((c, i) => <CardInactive cd={c.obj} key={c.obj.index + 100} win={false} id={1} left={c.left} />)\n                            :\n                            playCards.map(c => <CardInactive cd={c} key={c.index} win={winner} id={1} left={prevPlay.current.clientWidth / 2}/>)\n                        }\n\t                </div>\n                </div>\n            </div>\n            <div className=\"my-player\">\n                <div className=\"hand\">\n                    <form id=\"hand-form\" action=\"\">\n                        <div className=\"hand-cards\" ref={element}>\n                            <div>\n                                {cards.map((c, i) => <Card cd={c.obj} checked={c.checked} key={c.obj.index} left={c.position} getRef={(ref) => getRef(ref, i, 'active')} handleChange={() => checkCard(i)} />)}\n                            </div>\n                        </div>\n                        <button id=\"hand-submit\" disabled={!playDetails.current.turn} onClick={confirmPlay}>Confirm Play</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'add':\n            return [...state, action.item];\n        case 'remove':\n            return [\n                ...state.slice(0, action.index),\n                ...state.slice(action.index + 1)\n            ];\n        case 'replace':\n        \treturn action.items;\n    \tcase 'update':\n    \t\treturn [\n                ...state.slice(0, action.index),\n                action.item,\n                ...state.slice(action.index + 1)\n            ];\n        case 'filter':\n        \treturn state.filter((ele, i) => !action.indices.includes(i));\n        case 'clear':\n        \treturn [];\n        // default:\n        //     throw new Error();\n    }\n}\n\nfunction arraysEqual(arr, cards) {\n  \tfor(let i = 0; i < cards.length; i++) {\n  \t\tif(arr[i] !== cards.position) {\n  \t\t\treturn false;\n  \t\t}\n  \t}\n  \treturn true;\n}\n\nexport default MyPlayer;","import React, { useState, useEffect, useReducer, useRef, useCallback } from 'react';\n\nconst useStateWithPromise = (initialState) => {\n  const [state, setState] = useState(initialState);\n  const resolverRef = useRef(null);\n\n  useEffect(() => {\n    if (resolverRef.current) {\n      resolverRef.current(state);\n      resolverRef.current = null;\n    }\n    /**\n     * Since a state update could be triggered with the exact same state again,\n     * it's not enough to specify state as the only dependency of this useEffect.\n     * That's why resolverRef.current is also a dependency, because it will guarantee,\n     * that handleSetState was called in previous render\n     */\n  }, [resolverRef.current, state]);\n\n  const handleSetState = useCallback((stateAction) => {\n    setState(stateAction);\n    return new Promise(resolve => {\n      resolverRef.current = resolve;\n    });\n  }, [setState])\n\n  return [state, handleSetState];\n};\n\nconst useReducerWithPromise = (reducer, initialState) => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const resolverRef = useRef(null);\n\n  useEffect(() => {\n    if (resolverRef.current) {\n      resolverRef.current(state);\n      resolverRef.current = null;\n    }\n    /**\n     * Since a state update could be triggered with the exact same state again,\n     * it's not enough to specify state as the only dependency of this useEffect.\n     * That's why resolverRef.current is also a dependency, because it will guarantee,\n     * that handleSetState was called in previous render\n     */\n  }, [resolverRef.current, state]);\n\n  const handleSetState = useCallback((stateAction) => {\n    setState(stateAction);\n    return new Promise(resolve => {\n      resolverRef.current = resolve;\n    });\n  }, [setState])\n\n  return [state, handleSetState];\n};\n\nexport {useStateWithPromise, useReducerWithPromise};\n\n","import React, { useState, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport CardInactive from './CardInactive';\n\nfunction Discard(props) {\n\n    const [socket, setSocket] = useState(props.socket);\n    const [cards, setCards] = useState([]);\n    const [points, setPoints] = useState(0);\n    const [adding, setAdding] = useState(false);\n \n    useEffect(() => {\n        socket.on('reveal discard', function(data) {\n            setCards(data.discard);\n            setPoints(data.addPoints);\n            setAdding(data.adding);\n        });\n    });\n    //console.log(cards);\n\n    return (\n        <div id=\"discard\" style={props.visible ? {display: 'block'} : {display: 'none'}}>\n            <h2>Discard Pile</h2>\n            <div id=\"discard-cards\">{cards.map(cd => <CardInactive cd={cd} key={cd.index} win={adding ? (cd.points > 0) : false}/>)}</div>\n            <p id=\"discard-points\">{adding ? 'The opponents gained ' + points + ' points.' : ''}</p>\n        </div>\n    );\n}\n\nexport default Discard;","import React, { useState, useEffect, useRef } from 'react';\nimport Player from './components/Player';\nimport MyPlayer from './components/MyPlayer';\nimport Discard from './components/Discard';\n\nfunction GameSpace(props) {\n  const [started, setStarted] = useState(false);\n  const [socket, setSocket] = useState(props.socket);\n  const [message, setMessage] = useState({\n    body: '',\n    subtitle: '',\n    color: ''\n  });\n  const [discardVisible, setDiscard] = useState(false);\n  const playerId = useRef(null);\n  //let playerId;\n\n  useEffect(() => {\n      socket.on('set playerId', function(id) {\n        playerId.current = id;\n      });\n      socket.on('my hand', function(data) {\n        setStarted(true);\n      });\n      socket.on('next turn', function(data) {\n        if(data.turn === playerId.current) {\n            setMessage({body: \"It's your turn!\",  color: 'green'});\n          } else {\n            setMessage({body: \"It's \" + data.usrnm + \"'s turn!\", color: ''});\n          }\n      });\n      socket.on('reveal discard', function() {\n        setDiscard(true);\n        setTimeout(function() {\n          setDiscard(false);\n        }, 7000);\n      });\n      socket.on('end game', function(data) {\n        setMessage({body: data.msg, subtitle: data.subtitle, color: ''});\n        setStarted(false);\n      });\n  }, []);\n\n  const startGame = (evt) => {\n    evt.preventDefault();\n    setMessage({body: 'Waiting...', color: ''});\n    setStarted(true);\n    socket.emit('start game', {});\n  }\n\n  return (\n    <div className=\"game-space\">\n      {props.popUp ? \n        <div id=\"pop-up\">\n          <p id=\"pop-up-close\"><a href=\"#\" onClick={props.togglePop}>X</a></p>\n          <div id=\"pop-up-inner\">\n            <h1>Game History</h1>\n            <h3 className=\"yellow\">The team that was the Declarer each round is in yellow.</h3><br/>\n            {props.history.length > 0 ?\n              <table>\n                <tr>\n                  <th>Round</th>\n                  <th>{props.history[0].teams[0].usernames[0] + ' & ' + props.history[0].teams[0].usernames[1]}</th>\n                  <th>{props.history[0].teams[1].usernames[0] + ' & ' + props.history[0].teams[1].usernames[1]}</th>\n                  <th>Starter</th>\n                  <th>Trump Suit</th>\n                  <th>Points</th>\n                  <th>Winner</th>\n                </tr>\n                {props.history.map(game => {\n                  return (<tr>\n                    <td>{game.roundIndex}</td>\n                    <td className={game.declarer === 0 ? 'winner' : ''}>{game.teams[0].score}</td>\n                    <td className={game.declarer === 1 ? 'winner' : ''}>{game.teams[1].score}</td>\n                    <td>{game.starter}</td>\n                    <td>{game.trumpSuit}</td>\n                    <td>{game.points}</td>\n                    <td>{game.teams[game.winner].usernames[0] + ' & ' + game.teams[game.winner].usernames[1]}</td>\n                  </tr>);\n                })}\n                </table>\n                :\n                <p>No games yet.</p>\n              }\n          </div>\n        </div>\n        :\n        ''\n      }\n      <Discard socket={socket} visible={discardVisible} />\n      <div id=\"overlay\"></div>\n      <div id=\"header\">\n        <p className={\"center-msg \" + message.color}>{message.body}</p>\n        <h4 className={message.color}>{message.subtitle}</h4>\n      </div>\n      {playerId.current !== null ? <Player id=\"3\" socket={socket} main={playerId.current} /> : ''}\n      {playerId.current !== null ? <Player id=\"4\" socket={socket} main={playerId.current} /> : ''}\n      <div className=\"center\">\n        <input type=\"text\" value={props.code.current} id=\"code-box\" disabled />\n        {!started && props.userType.current === 'player' ?\n          <button id=\"start-game\" onClick={startGame}>{playerId.current !== null ? 'Start Next Round' : 'Start Game'}</button>\n          :\n          ''\n        }\n      </div>\n      {playerId.current !== null ? <Player id=\"2\" socket={socket} main={playerId.current}/> : ''}\n      {props.userType.current === 'player' ? <MyPlayer socket={socket} playerId={playerId.current} sendMessage={setMessage} /> : <Player id=\"1\" socket={socket} main={playerId.current} />}\n    </div>\n  );\n}\n\nexport default GameSpace;","import React, { useState, useEffect } from 'react';\n\nfunction GameStart(props) {\n\n\tconst [state, setState] = useState(0);\n\tconst [socket, setSocket] = useState(props.socket);\n\n\tconst showInstructions = () => {\n\t\tsetState(3);\n\t}\n\n\tif(state === 1) {\n\t\treturn <CreateGame setState={() => setState(0)} socket={socket} setRoom={props.setRoom} code={props.code} />;\n\t} else if(state === 2) {\n\t\treturn <JoinGame setState={() => setState(0)} socket={socket} setRoom={props.setRoom} code={props.code} />;\n\t} else if(state === 3) {\n\t\treturn <Instructions setState={setState} />;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"start-page\">\n\t\t\t\t<div className=\"game-start\">\n\t\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t\t<h2>Host</h2>\n\t\t\t\t\t\t<button onClick={() => setState(1)}>Create a Game</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"join-game\">\n\t\t\t\t\t\t<h2>Guest</h2>\n\t\t\t\t\t\t<button onClick={() => setState(2)}>Join a Game</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button id=\"instructions-btn\" onClick={showInstructions}>How to Play</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nfunction CreateGame(props) {\n\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [message, setMessage] = useState('');\n\tconst [settings, setSettings] = useState({\n\t\trank: 2,\n\t\tsuit: null\n\t});\n\n\tconst changeSuit = (evt) => {\n\t\tsetSettings({...settings, suit: evt.target.value});\n\t}\n\n\tconst changeRank = (evt) => {\n\t\tsetSettings({...settings, rank: evt.target.value});\n\t}\n\n\tconst createGame = (evt) => {\n\t\tevt.preventDefault();\n\t\tif(settings.rank >= 2 && settings.rank <= 14) {\n\t\t\tsocket.emit('create game', settings, (res) => {\n\t\t\t\tprops.code.current = res;\n\t\t\t\tprops.setRoom(0);\n\t\t\t});\n\t\t} else {\n\t\t\tsetMessage('The trump rank must be between 2 and 14.');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"start-page\">\n\t\t\t<div className=\"game-start\">\n\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t<form id=\"edit-settings\">\n\t\t              <label>Trump Rank</label><br/>\n\t\t               <input id=\"setTrumpValue\" name=\"setTrumpValue\" autoComplete=\"off\" defaultValue=\"2\" min=\"2\" max=\"14\" type=\"number\" onChange={changeRank}/><br/>\n\t\t              <label>Trump Suit</label><br/><div className=\"select\">\n\t\t                <select id=\"setTrumpSuit\" name=\"setTrumpSuit\" onChange={changeSuit}>\n\t\t                  <option value=\"spades\">spades</option>\n\t\t                  <option value=\"hearts\">hearts</option>\n\t\t                  <option value=\"clubs\">clubs</option>\n\t\t                  <option value=\"diamonds\">diamonds</option>\n\t\t                  <option value=\"random\" defaultValue>random</option>\n\t\t                </select>\n\t\t                </div>\n\t\t              <button onClick={createGame}>Create Game</button>\n\t\t            </form>\n\t\t            <p id=\"login-error\" className=\"error-message\">{message}</p>\n\t\t            <p><a href=\"#\" onClick={props.setState}>← BACK</a></p>\n\t            </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction JoinGame(props) {\n\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [message, setMessage] = useState('');\n\tconst [id, setID] = useState('');\n\n\tconst changeID = (evt) => {\n\t\tsetID(evt.target.value);\n\t}\n\n\tconst joinGame = (evt) => {\n\t\tevt.preventDefault();\n\t\tsocket.emit('join game', id, (res) => {\n\t\t\tif(res === 'success') {\n\t\t\t\tprops.code.current = id;\n\t\t\t\tprops.setRoom(0);\n\t\t\t} else {\n\t\t\t\tsetMessage('No game with that code found.');\n\t\t\t}\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"start-page\">\n\t\t\t<div className=\"game-start\">\n\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t<form id=\"edit-settings\">\n\t\t              <label>Game ID</label><br/>\n\t\t              <input name=\"gameID\" autoComplete=\"off\" type=\"text\" onChange={changeID}/><br/>\n\t\t              <button onClick={joinGame}>Join Game</button>\n\t\t              <p id=\"login-error\" className=\"error-message\">{message}</p>\n\t\t            </form>\n\t\t            <p><a href=\"#\" onClick={props.setState}>← BACK</a></p>\n\t            </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Instructions(props) {\n\tconst close = () => {\n\t\tprops.setState(0);\n\t}\n\n\treturn (\n\t\t<div id=\"instructions\">\n\t        <p id=\"instructions-close\" onClick={close}><a href=\"#\">X</a></p>\n\t        <h1>Rules</h1>\n\t        \n\t        <h3>Players and Cards</h3>\n\t        <p>Sheng Ji is a game played by four players in fixed teams, with partners facing each other across the table. A standard international pack is used, with red and black jokers, making 54 cards in all. The point values of the cards are as follows:</p>\n\t        <table>\n\t\t        <tr>\n\t\t\t        <td>Each King</td>\n\t\t\t        <td>10 points</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Each ten</td>\n\t\t        \t<td>10 points</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Each five </td>\n\t\t        \t<td>5 points,</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Other cards</td>\n\t\t        \t<td>no value</td> \n\t\t        </tr>\n\t        </table>\n\t        <h3>Ranking of Cards</h3>\n\t        <p>In each hand there are eighteen trumps: the two jokers, all the cards of a particular suit (the trump suit) and all the cards of a particular rank (the trump rank). The highest trump is the red Joker, second is the black Joker, and third is the card which belongs to both the trump suit and the trump rank. Next come the other three cards of the trump rank, which are equal in status. Finally there are the remaining cards of the trump suit which rank in downwards order A, K, Q, J, 10, 9, 8, 7, 6, 5, 4, 3, 2 (omitting the trump rank). The three remaining suits also rank from highest to lowest omitting the trump rank.</p>\n\n\t        <h3>Declarers and Opponents</h3>\n\t        <p>In each game one team is the Declarers, and the other are the Opponents. The Declarers are the winners of the previous game. Each team's score is expressed as a card rank from two (low) up to Ace (high). In each game the trump rank is the Declarers' current score. Both sides start at two and the winners are the first side whose score goes above Ace.</p>\n\t        <p>In each game, one of the Declarers is designated the starter. They will get to start the first round of the game. Additionally, before the game starts, the starter gets the 6 leftover cards after the cards have been dealed. They then get to choose 6 cards from their own hand to discard. No other players get to see these cards. These cards will become important after the game is finished.</p>\n\n\t        <h3>The Play</h3>\n\t        <p>During the play, Jokers and cards of the trump rank all count as belonging to the trump suit, not to the suits marked on them. </p>\n\n\t        <p>Play is in counter-clockwise rotation. In the first round, the first person to play their cards is the starter; in each subsequent round, the first person to play is the winner of the previous round. Each of the other three players in turn must play a card in the same suit as the person who started, unless they have run out of cards of the suit, then they may play any cards in their hand. If playing the trump suit, among trumps of equal rank, the one which is played earliest beats the others. When playing different suits, the trump suit will beat the other suits. If everyone plays different non-trump suits, then the highest card in the suit the first person played wins.</p>\n\n\t        <p>The goal of the game is to win rounds containing points, that is kings, tens and fives. Whenever the Opponents win a round containing any point cards, they accumulate the amount of points in the cards. When the Declarers win a round, they do not accumulate points but prevent the Opponents from winning points.</p>\n\n\t        <h3>Scoring</h3>\n\t        <p>The result of the game depends on the number of card points won by the Opponents. This determines which side scores how many points, and who will be the Declarers for the next hand.</p>\n\t        <p>If the Opponents win the last round of the game, any point cards in the discard pile get added to the Opponents' points. Moreover, the value of each point card in the discard pile is doubled.</p>\n\t        <table>\n\t\t        <tr>\n\t\t        \t<th>Points</th>\n\t\t        \t<th>Score</th>\n\t\t        \t<th>Declarers for next hand</th>\n\t\t        \t<th>Starter for next hand</th>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>0</td>\n\t\t        \t<td>Declarers score 2</td>\n\t\t        \t<td>No change</td>\n\t\t        \t<td>Previous starter's partner</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>5 to 35</td>\n\t\t        \t<td>Declarers score 1</td>\n\t\t        \t<td>No change</td>\n\t\t        \t<td>Previous starter's partner</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>40 to 75</td>\n\t\t        \t<td>Opponents score 1</td>\n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>80 to 95</td>\n\t\t        \t<td>Opponents score 2</td> \n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>100 or more</td> \n\t\t        \t<td>Opponents score 3</td>\n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t        </table>\n    \t</div>\n\t);\n}\n\nexport default GameStart;","import React, { useState, useEffect } from 'react';\nimport GameStart from './components/GameStart';\n\nfunction StartPage(props) {\n\n    const [socket, setSocket] = useState(props.socket);\n    const [message, setMessage] = useState('');\n    const [state, setState] = useState(-1);\n    const [username, setUsername] = useState('');\n    const [teams, setTeams] = useState([{usernames: []}, {usernames: []}]);\n\n    useEffect(() => {\n        socket.on('set teams', function(tms) {\n            setTeams(teams => tms);\n        });\n    }, []);\n\n    const changeUsername = (evt) => {\n        setUsername(evt.target.value);\n    }\n\n    const loginSubmit = (evt) => {\n        evt.preventDefault();\n        if(username !== '' && username.replace(/\\s/g, '').length) {\n            socket.emit('add user', username, (res) => {\n                if(res === 'success') {\n                    props.setUsername(username);\n                    setState(1);\n                    setMessage('');\n                } else if(res === 'return') {\n                    props.setUserType(0);\n                    props.finished(username);\n                } else {\n                    setMessage(res);\n                }\n            });\n        } else {\n            setMessage('Please enter a valid username.');\n        }\n    }\n\n    const playerSettings = (type) => {\n        socket.emit('user type', type, (res) => {\n            if(res === 'player') {\n                setState(2);\n                props.setUserType(0);\n                setMessage('');\n            } else if(res === 'spectator') {\n                props.setUserType(1);\n                props.finished(username);\n            } else {\n                setMessage(res);\n            }\n        });\n    }\n\n    const setTeam = (team) => {\n        socket.emit('set team', team, (res) => {\n            if(res === 'success') {\n                props.finished(username);\n            } else {\n                setMessage(res);\n            }\n        });\n    }\n\n    if(state === -1) {\n        return (\n            <GameStart socket={socket} setRoom={setState} code={props.code} />\n        );\n    } else if(state === 0) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"registration\">\n                    <h1>Sheng Ji</h1>\n                    <h3 id=\"start-code\">{props.code.current}</h3>\n                    <form id=\"create-user\">\n                        <label>Username</label><br/>\n                        <input id=\"username\" name=\"username\" autoComplete=\"off\" type=\"text\" value={username} onChange={changeUsername} />\n                        <button onClick={loginSubmit}>Submit</button>\n                    </form>\n                    <p id=\"login-error\" className=\"error-message\">{message}</p>\n                </div>\n                    \n            </div>\n        );\n    } else if(state === 1) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"game-settings\">\n                    <div id=\"game-settings-player\">\n                        <h1>Sheng Ji</h1>\n                        <h3 id=\"start-code\">{props.code.current}</h3>\n                        <h2>Would you like to join the game as a player or a spectator?</h2>\n                        <button id='join-player' onClick={() => playerSettings('player')} >Player</button>\n                        <button id='join-spectator' onClick={() => playerSettings('spectator')}>Spectator</button>\n                        <p id=\"setting-error\" className=\"error-message\">{message}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if(state === 2) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"game-settings\">\n                    <div id=\"team\">\n                        <h1>Sheng Ji</h1>\n                        <h3 id=\"start-code\">{props.code.current}</h3>\n                        <h2 id=\"team-header\">Which team would you like to join?</h2>\n                        <div id=\"team-container\">\n                            <div id=\"declarers\" onClick={() => setTeam(0)}>\n                                <h3>Declarers</h3>\n                                <div><ul>{teams[0].usernames.length > 0 ? teams[0].usernames.map(nm => <li>{nm}</li>) : <li>No players yet</li>}</ul></div>\n                            </div>\n                            <div id=\"opponents\" onClick={() => setTeam(1)}>\n                                <h3>Opponents</h3>\n                                <div><ul>{teams[1].usernames.length > 0 ? teams[1].usernames.map(nm => <li>{nm}</li>) : <li>No players yet</li>}</ul></div>\n                            </div>\n                        </div>\n                        <p id=\"team-error\" className=\"error-message\">{message}</p>\n                    </div>  \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StartPage;","import React, { useState, useEffect, useRef } from 'react';\nimport './styles/main.scss';\nimport {createDeck} from './createDeck';\nimport Card from './components/Card';\nimport Chat from './Chat';\nimport GameSpace from './GameSpace';\nimport StartPage from './StartPage';\nimport socketIOClient from 'socket.io-client';\nconst ENDPOINT = 'http://localhost:8888/';\nconst socket = socketIOClient(ENDPOINT);\n\nfunction App() {\n\n  const [deck, setDeck] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [login, setLogin] = useState({\n    username: '',\n    loggedIn: false\n  });\n  const [gameDetails, setGame] = useState({\n    trumpSuit: '',\n    trumpRank: null,\n    points: 0\n  });\n  const userType = useRef('');\n  const code = useRef('');\n\n  const initialize = () => {\n    return createDeck();\n  }\n\n  useEffect(() => {\n    setDeck(initialize());\n    socket.on('setup game', function(data) {\n      setGame({trumpSuit: data.trumpSuit, trumpRank: data.trumpValue, points: data.points});\n    });\n    socket.on('update points', function(pts) {\n      setGame(gameDetails => {return {...gameDetails, points: pts}});\n    });\n    socket.on('disconnected', function() {\n      alert('You have disconnected from the server. Please refresh your page.');\n    });\n  }, [setDeck]);\n\n  const finishSetup = (usr) => {\n    setLogin({username: usr, loggedIn: true});\n  }\n\n  const setUsername = (usr) => {\n    setLogin({username: usr, loggedIn: login.loggedIn});\n  }\n\n  const setUserType = (number) => {\n    if(number === 0) {\n      userType.current = 'player';\n    } else {\n      userType.current = 'spectator';\n    }\n  }\n\n  const togglePop = () => {\n    setPopUp(false);\n  }\n\n  const getGameHistory = (evt) => {\n    socket.emit('get game history', {}, (res) => {\n      setGameHistory(res);\n    });\n    setPopUp(true);\n  }\n\n  return (\n    <div className=\"App\">\n      {login.loggedIn ? '' : <StartPage username={login.username} socket={socket} setUsername={setUsername} setUserType={setUserType} finished={finishSetup} code={code} />}\n      <div id=\"chat-page\">\n        <div className=\"sidebar\">\n          <div className=\"legend\">\n            <div>\n              <h2>Trump Suit</h2>\n              <p id=\"trump-suit\">{gameDetails.trumpSuit ? <img src={process.env.PUBLIC_URL + \"/\" + gameDetails.trumpSuit + \".png\"} /> : ''} </p>\n            </div>\n            <div>\n              <h2>Trump Rank</h2>\n              <p id=\"trump-rank\">{gameDetails.trumpRank ? gameDetails.trumpRank : ''}</p>\n            </div>\n            <div>\n              <h2>Points</h2>\n              <p id=\"points\">{gameDetails.points}</p>\n            </div>\n            <div>\n              <h2>Game<br/>History</h2>\n              <p><a id=\"game-history\" href=\"#\" onClick={getGameHistory}>View</a></p>\n            </div>\n          </div>\n          <div id=\"my-player-stats\">\n              <h3 id=\"my-username\">{login.username}</h3>\n              {/*<p>My Score: <span id=\"my-score\"></span></p>*/}\n              <p><a href=\"#\" id=\"help-link\" style={{fontSize:'10px'}}>Help</a></p>\n            </div>\n          </div>\n        {deck.length > 0 ? <GameSpace deck={deck} socket={socket} popUp={popUp} togglePop={togglePop} history={gameHistory} userType={userType} code={code} /> : '' }\n        <Chat socket={socket} username={login.username} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}