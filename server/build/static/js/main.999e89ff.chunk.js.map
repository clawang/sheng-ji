{"version":3,"sources":["components/Card.js","Chat.js","components/CardInactive.js","components/Player.js","createDeck.js","components/useStateWithPromise.js","components/MyPlayer.js","components/Discard.js","GameSpace.js","components/GameStart.js","StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","thisCard","useRef","useEffect","getRef","style","left","zIndex","order","top","ref","type","name","className","value","cd","index","checked","onChange","handleChange","display","src","process","img","Chat","useState","socket","message","setMessage","chatContent","setChat","teams","setTeams","container","chats","on","msg","addChat","username","body","tr","tm","declarers","data","chat","length","concat","current","height","clientHeight","scrollTop","id","portrait","status","map","team","i","score","usernames","c","action","autoComplete","evt","target","onClick","e","preventDefault","emit","CardInactive","animateCard","width","offset","total","TweenMax","fromTo","opacity","win","Player","cards","setCards","setUsername","winner","setWinner","playerId","thisBox","main","clientWidth","String","suitValues","spades","hearts","clubs","diamonds","trump","sortFunction","a","b","obj","adjSuit","adjustedValue","handCardsHeight","reducer","state","item","slice","items","filter","ele","indices","includes","MyPlayer","initialState","useReducer","setState","resolverRef","handleSetState","useCallback","stateAction","Promise","resolve","useReducerWithPromise","playCards","setPlayCards","cardHistory","setCardHistory","historyVisible","setHistory","mouseOver","setMouse","trumpSuit","setTrump","turn","setTurn","setPortrait","playDetails","rank","decks","handLength","hand","element","playHand","prevPlay","window","innerWidth","innerHeight","Math","floor","temp","positions","calculateCardPosition","forEach","push","dom","position","dealing","sendMessage","displayCards","prevPlayed","prev","suit","started","repositionCards","color","newCards","off","join","sortCards","count","start","n","tempInt","min","interval","xPos","yPos","card","w","h","to","x","y","borderRadius","setTimeout","adjustValues","sort","t","ind","trumpValue","flexWrap","onMouseEnter","onMouseLeave","key","checkCard","disabled","result","discardLength","r","findIndex","res","cds","remove","v","crd","subtitle","Discard","setAdding","max","discard","d","points","adding","addPoints","visible","GameSpace","setStarted","discardVisible","setDiscard","players","usrnm","revealDiscard","popUp","href","togglePop","history","game","roundIndex","declarer","starter","code","userType","GameStart","CreateGame","setRoom","JoinGame","Instructions","close","settings","setSettings","defaultValue","setID","StartPage","tms","playerSettings","setUserType","finished","setTeam","replace","nm","socketIOClient","ChatIcon","notif","setNotif","handleClick","App","setPopUp","gameHistory","setGameHistory","help","setHelp","loggedIn","login","setLogin","trumpRank","gameDetails","setGame","chatOpen","pts","alert","usr","number","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.999e89ff.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Card(props) {\n\n\tconst thisCard = useRef(null);\n\n\tuseEffect(() => {\n\t\tprops.getRef(thisCard);\n\t}, [thisCard]);\n\n    return (\n        <label style={{left: props.left + 'px', zIndex: props.order, top: props.top}} ref={thisCard}>\n            <input type=\"checkbox\" name=\"card-picked\" className=\"card-checkbox\" value={props.cd.index} checked={props.checked} onChange={props.handleChange}/>\n            <div className=\"card-container\">\n                <p className={\"card-number\" + (props.cd.value < 80 ? '' : ' joker') + (props.cd.value === 81 ? ' red' : '')}>{props.cd.display}</p>\n                {props.cd.value < 80 ? <img className=\"card-suit\" src={process.env.PUBLIC_URL + props.cd.img} /> : ''}\n            </div>\n        </label>\n    );\n}\n\nexport default Card;","import react, {useEffect, useState, useRef} from 'react';\n\nfunction Chat(props) {\n\n  const [socket, setSocket] = useState(props.socket);\n  const [message, setMessage] = useState('');\n  const [chatContent, setChat] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const container = useRef(null);\n  const chats = useRef(null);\n\n  useEffect(() => {\n    socket.on('chat message', function(msg){\n      addChat(msg.username, msg.body, '');\n    });\n    socket.on('setup game', function(tr) {\n      let tm = tr.teams;\n      tm[0].declarers = (tr.declarers === 0);\n      tm[1].declarers = (tr.declarers === 1);\n      setTeams(tm);\n    });\n    socket.on('user joined', function(data) {\n      addChat(data.username, data.username + ' has joined the game.', 'connection-msg');\n    });\n    socket.on('user left', function(data) {\n      addChat(data.username, data.username + ' has left the game.', 'disconnection-msg');\n    });\n  }, []);\n\n  const handleChange = (evt) => {\n    setMessage(evt.target.value);\n  }\n\n  const submitChat = (e) => {\n    let msg = message;\n    e.preventDefault(); // prevents page reloading\n    socket.emit('chat message', {body: msg, username: props.username});\n    setMessage('');\n  }\n\n  const addChat = (username, msg, style) => {\n    let str;\n    if(style.length === 0) {\n      str = username + \": \" + msg;\n    } else {\n      str = msg;\n    }\n    let chat = {body: str, username: username, style: style};\n    setChat(chatContent => chatContent.concat(chat));\n    if(chats.current && container.current) {\n      let height = chats.current.clientHeight;\n      container.current.scrollTop = height;\n    }\n  }\n\n  return (\n    <aside id=\"chat\" className={props.portrait ? (props.status ? 'chat-opening' : 'chat-closing') : ''}>\n      <div id=\"current-users\">\n        <div id=\"all-users\">\n          {teams.length > 0 ? \n            teams.map((team, i) => {\n              return (\n                <div key={i}>\n                  <h2>{(team.declarers ? \"Declarers\" : \"Opponents\") + \" – \" + team.score}</h2>\n                  <li>{team.usernames[0]}</li>\n                  <li>{team.usernames[1]}</li>\n                </div>\n              );\n            })\n            :\n            ''\n          }\n        </div>\n      </div>\n      <div id=\"chat-container\">\n        <div id=\"messages-container\" ref={container}>\n          <ul id=\"messages\" ref={chats}>\n            {chatContent.length > 0 ? chatContent.map((c, i) => <li className={'chat-msg ' + c.style} key={i}>{c.body}</li>) : ''}\n          </ul>\n        </div>\n        <form id=\"chatbox\" action=\"\">\n          <input id=\"m\" autoComplete=\"off\" value={message} onChange={handleChange} /><button onClick={submitChat}>Send</button>\n        </form>\n      </div>\n    </aside>\n  );\n}\n\nexport default Chat;","import React, { useState, useEffect, useRef } from 'react';\nimport {TweenMax} from 'gsap';\n\nfunction CardInactive(props) {\n\n\tconst thisCard = useRef(null);\n\n\tuseEffect(() => {\n\t\tanimateCard();\n\t}, [props.left]);\n\n\tconst animateCard = () => {\n\t\tlet width = props.width;\n\t\tlet offset = (width - (props.total * 20 - 20)) / 2;\n\t\tif(props.id === '2') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, left: width - 30}, {opacity: 1, left: offset + props.index * 20});\n\t\t} else if(props.id === '3') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, top: -107}, {opacity: 1, top: 30, left: offset + props.index * 20});\n\t\t} else if(props.id === '4') {\n\t\t\tTweenMax.fromTo(thisCard.current, 0.5, {opacity: 0, left: 0}, {opacity: 1, left: offset + props.index * 20});\n\t\t} \n\t}\n\n    return (\n        <div className={\"card-container\" + (props.win ? \" winning\" : \"\")} ref={thisCard} style={props.left ? {left: props.left + 'px'} : {}}>\n            <p className={\"card-number\" + (props.cd.value < 80 ? '' : ' joker') + (props.cd.value === 81 ? ' red' : '')}>{props.cd.display}</p>\n            {props.cd.value < 80 ? <img className=\"card-suit\" src={process.env.PUBLIC_URL + props.cd.img} /> : ''}\n        </div>\n    );\n}\n\nexport default CardInactive;","import React, { useState, useEffect, useRef } from 'react';\nimport CardInactive from './CardInactive';\n\nfunction Player(props) {\n\tconst [cards, setCards] = useState([]);\n\tconst [username, setUsername] = useState('');\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [winner, setWinner] = useState(false);\n\tconst playerId = useRef(-1);\n\tconst thisBox = useRef(null);\n\n\tuseEffect(() => {\n\t\tif(props.main < 0) {\n\t\t\tplayerId.current = props.id - 1;\n\t\t} else {\n\t\t\tplayerId.current =  (props.id - 1 + props.main) % 4;\n\t\t}\n\t\tsocket.on('hand played', function(data) {\n\t\t\tif(data.id === playerId.current) {\n\t\t\t\tsetCards(data.cards);\n\t\t\t\tsetUsername(data.username);\n\t\t\t}\n\t\t});\n\t\tsocket.on('win round', function(win) {\n\t\t\tif(win === playerId.current) {\n\t\t\t\tsetWinner(true);\n\t\t\t}\n\t\t});\n\t\tsocket.on('new round', function() {\n\t\t\tsetCards(cards => []);\n\t\t\tsetWinner(false);\n\t\t});\n\t\tsocket.on('end game', function() {\n\t\t\tsetCards(cards => []);\n\t\t\tsetWinner(false);\n\t\t\tsetUsername('');\n\t\t});\n\t}, []);\n\n    return (\n        <div className={\"player-\" + props.id} ref={thisBox}>\n            <h2>{username}</h2>\n            <div id={\"player-\" +props.id+\"-cards\"}>\n                {cards.map((c, i) => <CardInactive cd={c} key={String(c.index).concat(\":\" + i)} index={i} win={winner} id={props.id} width={thisBox ? thisBox.current.clientWidth : 150} total={cards.length}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Player;","let suits = ['spades', 'hearts', 'clubs', 'diamonds'];\nlet valName = ['-1', '0', '1', '2', '3', '4' , '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace'];\nlet display = ['-1', '0', '1', '2', '3', '4' , '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\nconst suitSrc = ['/spades.png', '/hearts.png', '/clubs.png', '/diamonds.png'];\nconst suitValues = {\n  spades: 0,\n  hearts: 1,\n  clubs: 2,\n  diamonds: 3,\n  trump: 4\n};\n\nfunction createDeck() {\n    const deck = [];\n    let index = 1;\n    for(let suit = 0; suit < 4; suit++) {\n      for(let number = 2; number < 15; number++) {\n        let pts = 0;\n        if(number === 5) {\n          pts = 5;\n        } else if(number === 10 || number === 13) {\n          pts = 10;\n        }\n        deck.push({name: valName[number] + ' of ' + suits[suit], suit: suits[suit], value: number, display: display[number], points: pts, index: index, img: suitSrc[suit], adjustedValue: number, adjSuit: suit});\n        index++;\n      }\n    }\n    deck.push({name: 'small joker', suit: 'trump', value: 80, display: 'JOKER', points: 0, index: index, img: '', adjustedValue: 100, adjSuit: 'trump'});\n    index++;\n    deck.push({name: 'big joker', suit: 'trump', value: 81, display: 'JOKER', points: 0, index: index, img: '', adjustedValue: 101, adjSuit: 'trump'});\n    return deck;\n}\n\nfunction getCard(index) {\n  let deck = createDeck();\n  return deck.find(cd => cd.index === index);\n}\n\nfunction adjustValues(deck, trumpValue, trumpSuit) {\n  let arr = deck.slice();\n  for(let i = 0; i < arr.length; i++) {\n    const card = arr[i];\n    if(card.obj.value === trumpValue && card.obj.suit === trumpSuit) {\n      card.obj.adjSuit = 'trump';\n      card.obj.adjustedValue = 70;\n    } else if(card.obj.value === trumpValue) {\n      card.obj.adjSuit = 'trump';\n      card.obj.adjustedValue = 60;\n    } else if(card.obj.suit === trumpSuit) {\n      card.obj.adjSuit = 'trump';\n      card.obj.adjustedValue = card.obj.value + 40;\n    } else {\n      card.obj.adjSuit = card.obj.suit;\n      card.obj.adjustedValue = card.obj.value;\n    }\n  } \n  return arr;\n}\n\nfunction sortFunction(a, b) {\n  if(a.obj.adjSuit !== b.obj.adjSuit) {\n    return suitValues[a.obj.adjSuit] - suitValues[b.obj.adjSuit];\n  } else {\n    return a.obj.adjustedValue - b.obj.adjustedValue;\n  }\n}\n\nexport {createDeck, getCard, sortFunction, adjustValues}","import React, { useState, useEffect, useReducer, useRef, useCallback } from 'react';\n\nconst useStateWithPromise = (initialState) => {\n  const [state, setState] = useState(initialState);\n  const resolverRef = useRef(null);\n\n  useEffect(() => {\n    if (resolverRef.current) {\n      resolverRef.current(state);\n      resolverRef.current = null;\n    }\n    /**\n     * Since a state update could be triggered with the exact same state again,\n     * it's not enough to specify state as the only dependency of this useEffect.\n     * That's why resolverRef.current is also a dependency, because it will guarantee,\n     * that handleSetState was called in previous render\n     */\n  }, [resolverRef.current, state]);\n\n  const handleSetState = useCallback((stateAction) => {\n    setState(stateAction);\n    return new Promise(resolve => {\n      resolverRef.current = resolve;\n    });\n  }, [setState])\n\n  return [state, handleSetState];\n};\n\nconst useReducerWithPromise = (reducer, initialState) => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const resolverRef = useRef(null);\n\n  useEffect(() => {\n    if (resolverRef.current) {\n      resolverRef.current(state);\n      resolverRef.current = null;\n    }\n    /**\n     * Since a state update could be triggered with the exact same state again,\n     * it's not enough to specify state as the only dependency of this useEffect.\n     * That's why resolverRef.current is also a dependency, because it will guarantee,\n     * that handleSetState was called in previous render\n     */\n  }, [resolverRef.current, state]);\n\n  const handleSetState = useCallback((stateAction) => {\n    setState(stateAction);\n    return new Promise(resolve => {\n      resolverRef.current = resolve;\n    });\n  }, [setState])\n\n  return [state, handleSetState];\n};\n\nexport {useStateWithPromise, useReducerWithPromise};\n\n","import React, { useState, useEffect, useReducer, useRef } from 'react';\nimport Card from './Card';\nimport CardInactive from './CardInactive';\nimport {getCard} from '../createDeck';\nimport {TweenMax} from 'gsap';\nimport {sortFunction} from '../createDeck';\nimport {useReducerWithPromise} from './useStateWithPromise';\n\nlet handCardsHeight = ['110px', '150px'];\n\nfunction MyPlayer(props) {\n    const [socket, setSocket] = useState(props.socket);\n    const [cards, setCards] = useReducerWithPromise(reducer, []);\n    const [playCards, setPlayCards] = useState([]);\n    const [cardHistory, setCardHistory] = useReducer(reducer, []);\n    const [historyVisible, setHistory] = useState(false);\n    const [mouseOver, setMouse] = useState(false);\n    const [winner, setWinner] = useState(false);\n    const [trumpSuit, setTrump] = useState(null);\n    const [turn, setTurn] = useState(false);\n    const [portrait, setPortrait] = useState(false);\n    const playDetails = useRef({\n        state: 0, //0 is normal play, 1 is dealing, 2 is switching\n        playerId: -1,\n        rank: null,\n        decks: 0,\n        handLength: 0\n    });\n    const hand = useRef([]);\n    const element = useRef(null);\n    const playHand = useRef(null);\n    const prevPlay = useRef(null);\n\n    useEffect(() => {\n        if(window.innerWidth < window.innerHeight) {\n          setPortrait(true);\n          handCardsHeight = ['80px', '120px'];\n        }\n    \tsocket.on('my hand', function(data) {\n\t        playDetails.current = {...playDetails.current, playerId: data.playerId, rank: data.rank, decks: data.decks, handLength: Math.floor(data.decks * 54 / 4) - ((data.decks * 54 % 4) * -0.5 + 2)};\n            let temp = [];\n\t    \tlet positions = calculateCardPosition(0, data.hand.length);\n\t    \tdata.hand.forEach((cd, i) => {\n\t\t\t\ttemp.push({obj: cd, dom: {}, position: positions[i][0], top: positions[i][1], checked: false});\n\t\t\t});\n            if(data.dealing) {\n                playDetails.current = {...playDetails.current, state: 1};\n                setTurn(true);\n                props.sendMessage({body: \"Play a card with the trump rank to set the trump suit.\"});\n                hand.current = temp;\n                displayCards(temp, 0);\n            } else {\n                setCards({type: 'replace', items: temp});\n                setTrump(data.trumpSuit);\n            }\n            if(data.prevPlayed) {\n                data.prevPlayed.forEach(prev => {\n                    setCardHistory({type: 'add', item: {obj: prev, left: prevPlay.current.clientWidth / 2}});\n                });\n            }\n      \t});\n        socket.on('trump set', function(data) {\n            setTurn(false);\n            if(data.username.length > 0) {\n                props.sendMessage({body: data.username + ' set the trump suit to ' + data.suit});\n            } else {\n                props.sendMessage({body: 'The trump suit was set to ' + data.suit});\n            }\n        });\n        socket.on('sort cards', function(data) {\n            playDetails.current = {...playDetails.current, state: 0};\n            setTrump(data.suit);\n        });\n        socket.on('next turn', function(data) {\n        \tif(data.turn === playDetails.current.playerId) {\n        \t\tsetTurn(true);\n        \t} \n        })\n        socket.on('win round', function(win) {\n        \tif(win === playDetails.current.playerId) {\n\t\t\t\tsetWinner(true);\n\t\t\t}\n        });\n        socket.on('new round', function(started) {\n        \tif(started !== playDetails.current.playerId) {\n                //setCardHistory(cardHistory => cardHistory.concat(playCards));\n        \t\tsetPlayCards(playCards => []);\n        \t\tsetWinner(false);\n        \t}\n        });\n        socket.on('end game', function() {\n            setCardHistory({type: 'clear'});\n            setPlayCards([]);\n            setCards({type: 'clear'});\n        });\n    }, []);\n\n    useEffect(() => {\n        //console.log(cards);\n    \tif(cards.length > 0) {\n    \t\trepositionCards();\n    \t} \n        if(cards.length < playDetails.current.handLength && hand.current.length > 0 && playDetails.current.state === 1) {\n            displayCards(hand.current, cards.length);\n        }\n        if(cards.length >= playDetails.current.handLength && playDetails.current.state === 1) {\n            socket.emit('finished deal');\n            hand.current = [];\n        }\n        if(cards.length > playDetails.current.handLength && playDetails.current.state === 2) {\n            props.sendMessage({body: \"Select \"+ (playDetails.current.decks % 2 * -2 + 8) +\" cards to discard.\", color: 'green'});\n        }\n        socket.on('swap cards', function(data) {\n            playDetails.current = {...playDetails.current, state: 2, playerId: data.id};\n            setTurn(true);\n            let temp = [];\n            data.newCards.forEach(c => {\n                temp.push({obj: c, dom: {}, checked: false});\n            });\n            setCards({type: 'concat', items: temp});\n            setTrump(data.suit);\n        });\n\n        return () => {\n            socket.off('swap cards');\n        }\n    }, [cards.join(\",\")]);\n\n    useEffect(() => {\n        sortCards(trumpSuit);\n    }, [trumpSuit]);\n\n    //console.log(hand);\n\n    const calculateCardPosition = (index, count) => {\n        let positions = [];\n        let start = 0;\n        let n = count;\n        if(index === 0) {\n            let total = element.current ? element.current.clientWidth : 681;\n            let tempInt = (total - 80)/ Math.min(n - 1, 20);\n            let interval = Math.min(tempInt, 80);\n            if (total > n * 80) {\n                start = (total - n * 80) / 2;\n            }\n            for(let i = 0; i < n; i++) {\n                positions.push([start + interval * (i % 20), Math.floor(i/20) * 40]);\n            }\n        } else {\n            let total = prevPlay.current ? prevPlay.current.clientWidth : 60;\n            let tempInt = (total - 60)/(n-1);\n            let interval = Math.min(tempInt, 70);\n            if (total > n * 70) {\n                start = (total - n * 70) / 2;\n            }\n            for(let i = 0; i < n; i++) {\n                positions.push([start + interval*i + 35, 0]);\n            }\n        }\n        return positions;\n    }\n\n    const checkCard = (i) => {\n    \tlet temp = cards[i];\n    \ttemp.checked = !temp.checked;\n    \tsetCards({type: 'update', index: i, item: temp});\n    }\n\n    const getRef = (ref, i, type) => {\n        if(type === 'active') {\n            let temp = cards[i];\n            temp.dom = ref;\n    \t    setCards({type: 'update', index: i, item: temp});\n        } else {\n            let temp = cardHistory[i];\n            temp.dom = ref;\n            setCardHistory({type: 'update', index: i, item: temp});\n        }\n    }\n\n    const handleMouseEnter = (evt) => {\n        if(!historyVisible) {\n            setMouse(true);\n        }\n    }\n\n    const handleMouseLeave = (evt) => {\n        setMouse(false);\n    }\n\n    const confirmPlay = (evt) => {\n        evt.preventDefault();\n        let checked = cards.filter(cd => cd.checked);\n        let result = checked.map(cd => cd.obj);\n        if(playDetails.current.state === 2) {\n            let discardLength = playDetails.current.decks % 2 * -2 + 8;\n            if(result.length !== discardLength) {\n                props.sendMessage({body: \"You need to pick \" + discardLength + \" cards!\", color: 'red'});\n            } else {\n                props.sendMessage({body: \"\", color: ''});\n                let indices = [];\n                result.forEach((r, i) => {\n                    let c = cards.findIndex(cd => cd.obj.key === r.key);\n                    animateCard(c, i, discardLength);\n                    indices.push(c);\n                })\n                setTimeout(function(){ \n                    setCards({type: 'filter', indices: indices});\n                }, 1000);\n                socket.emit('submit swap cards', {cards: result.map(cd => cd.index), id: playDetails.current.playerId});\n                playDetails.current = {...playDetails.current, state: 0};\n            }\n        } else if(playDetails.current.state === 1) {\n            if(result.length > 1) {\n                props.sendMessage({body: \"You can only choose one card!\", color: 'red'});\n            } else if(result.length < 1) {\n                props.sendMessage({body: \"You didn't choose a card!\", color: 'red'});\n            } else {\n                const suit = result[0].suit;\n                if(result[0].value === playDetails.current.rank) {\n                    socket.emit('set suit', suit);\n                    checked[0].checked = false;\n                } else {\n                    props.sendMessage({body: \"That card isn't of the trump rank!\", color: 'red'});\n                }\n            }\n        } else if(turn) {\n            if(result.length < 1) {\n                props.sendMessage({body: \"You didn't select a card!\", color: 'red'});\n            } else {\n                socket.emit('validate hand', {cards: result, id: playDetails.current.playerId}, (res) => {\n                    if(res === 'success') {\n                        setPlayCards(playCards => []);\n                        let positions = calculateCardPosition(2, result.length);\n                        setWinner(false);\n                        let cds = [];\n                        let remove = result.map(r => r.key);\n                        for(let i = 0; i < result.length; i++) {\n                            let c = cards.findIndex(cd => cd.obj.key === result[i].key);\n                            let cd = animateCard(c, i, result.length);\n                            cd.left = positions[i][0];\n                            cds.push(cd);\n                        }\n                        setTurn(false);\n                        setTimeout(function(){ \n                            socket.emit('submit hand', {cards: result.map(cd => cd.index), id: playDetails.current.playerId});\n                            let temp = cards;\n                            setCards({type: 'replace', items: cards.filter(v => !remove.includes(v.obj.key))});\n                            setPlayCards(playCards => playCards.concat(cds));\n                            setCardHistory({type: 'concat', items: cds.map(crd => { return {obj: crd, left: prevPlay.current.clientWidth / 2}})});\n                        }, 1000);\n                    } else {\n                        props.sendMessage({body: \"Not a valid play!\", subtitle: res, color: 'red'});\n                    }\n                });\n            }\n        }\n    }\n    \n    const animateCard = (c, i, total) => {\n        let obj = cards[c];\n        obj.checked = false;\n        let positions = calculateCardPosition(2, total);\n        setCards({type: 'update', index: c, item: obj});\n        let xPos = positions[i][0] - cards[c].position;\n        if(!portrait) {\n            xPos -= 31;\n        }\n        let yPos = (playHand.current.clientHeight + 13 + obj.top) * -1;\n        let card = cards[c].obj;\n        let w = (window.innerWidth <= 600 ? '50px' : '60px');\n        let h = (window.innerWidth <= 600 ? '70px' : '80px');\n        TweenMax.to(obj.dom.current, 1, {x: xPos, y: yPos, width: w, height: h, borderRadius: '5px'});\n        return card;\n    }\n\n    const repositionCards = () => {\n    \tlet positions = calculateCardPosition(0, cards.length);\n        let temp = [...cards];\n    \ttemp.forEach((cd, i) => {\n    \t\tcd.position = positions[i][0];\n            cd.top = positions[i][1];\n    \t});\n        setCards({type: 'replace', items: temp});\n    }\n\n    const revealHistory = (evt) => {\n        if(!historyVisible) {\n            setHistory(true);\n            setMouse(false);\n            setTimeout(function() {\n                let positions = calculateCardPosition(1, cardHistory.length);\n                cardHistory.forEach((cd, i) => {\n                    let temp = cd;\n                    temp.left = positions[i][0];\n                    setCardHistory({type: 'update', index: i, item: temp});\n                });\n            }, 10);\n        } else {\n            cardHistory.forEach((cd, i) => {\n                let temp = cd;\n                temp.left = prevPlay.current.clientWidth / 2;\n                setCardHistory({type: 'update', index: i, item: temp});\n                //console.log(cardHistory);\n            });\n            setTimeout(function() {\n                setHistory(false);\n            }, 300);\n        }\n        //console.log(cardHistory);\n    }\n\n    const displayCards = (hand, index) => {\n        setTimeout(function(){\n            setCards({type: 'add', item: hand[index]});\n        }, 1000);\n    }\n\n    const skipSubmit = (evt) => {\n        evt.preventDefault();\n        socket.emit('set suit', '');\n        setTurn(false);\n    }\n\n    const sortCards = (suit) => {\n        let positions = calculateCardPosition(0, cards.length);\n        adjustValues(playDetails.current.rank, suit, positions);\n        let temp = [...cards].sort(sortFunction);\n        temp.forEach((t, ind) => {\n            t.position = positions[ind][0];\n            t.top = positions[ind][1];\n        });\n        setCards({type: 'replace', items: temp});\n    }\n\n    const adjustValues = (trumpValue, trumpSuit, positions) => {\n      for(let i = 0; i < cards.length; i++) {\n        const card = cards[i];\n        if(card.obj.value === trumpValue && card.obj.suit === trumpSuit) {\n          card.obj.adjSuit = 'trump';\n          card.obj.adjustedValue = 70;\n        } else if(card.obj.value === trumpValue) {\n          card.obj.adjSuit = 'trump';\n          card.obj.adjustedValue = 60;\n        } else if(card.obj.suit === trumpSuit) {\n          card.obj.adjSuit = 'trump';\n          card.obj.adjustedValue = card.obj.value + 40;\n        } else {\n          card.obj.adjSuit = card.obj.suit;\n          card.obj.adjustedValue = card.obj.value;\n        }\n        setCards({type: 'update', index: i, item: card});\n      } \n    }\n\n    return (\n        <div style={{width: '100%', display: 'flex', flexWrap: 'wrap'}}>\n            <div className=\"play\" ref={playHand}>\n                <div className=\"play-hand\">\n                    <p id=\"history-message\" style={mouseOver && cardHistory.length > 1 ? {opacity: 1} : {opacity: 0}}>Click to see play history</p>\n\t                <div className=\"play-hand-cards\" onClick={revealHistory} ref={prevPlay} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n\t                \t{historyVisible ? \n                            cardHistory.map((c, i) => <CardInactive cd={c.obj} key={c.obj.key + 200} win={false} id={1} left={c.left} />)\n                            :\n                            playCards.map((c, i) => <CardInactive cd={c} key={c.key} win={winner} id={1} index={i} left={c.left}/>)\n                        }\n\t                </div>\n                </div>\n            </div>\n            <div className=\"my-player\">\n                <div className=\"hand\">\n                    <form id=\"hand-form\" action=\"\">\n                        <div className=\"hand-cards\" ref={element} style={{height: (cards.length > 20 ? handCardsHeight[1] : handCardsHeight[0])}}>\n                            <div>\n                                {cards.map((c, i) => <Card cd={c.obj} checked={c.checked} key={c.obj.key} left={c.position} top={c.top} getRef={(ref) => getRef(ref, i, 'active')} handleChange={() => checkCard(i)} />)}\n                            </div>\n                        </div>\n                        {cards.length > 0 ? <button id=\"hand-submit\" disabled={!turn && (playDetails.current.state === 0 || playDetails.current.state === 1)} onClick={confirmPlay}>Confirm Play</button> : ''}\n                        {playDetails.current.state === 1 && turn ? <button id=\"skip-submit\" onClick={skipSubmit}>Skip</button> : ''}\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'add':\n            return [...state, action.item];\n        case 'remove':\n            return [\n                ...state.slice(0, action.index),\n                ...state.slice(action.index + 1)\n            ];\n        case 'replace':\n        \treturn [...action.items];\n    \tcase 'update':\n    \t\treturn [\n                ...state.slice(0, action.index),\n                action.item,\n                ...state.slice(action.index + 1)\n            ];\n        case 'filter':\n        \treturn state.filter((ele, i) => !action.indices.includes(i));\n        case 'concat':\n            return [...state].concat(action.items);\n        case 'clear':\n        \treturn [];\n        // default:\n        //     throw new Error();\n    }\n}\n\nfunction arraysEqual(arr, cards) {\n  \tfor(let i = 0; i < cards.length; i++) {\n  \t\tif(arr[i] !== cards.position) {\n  \t\t\treturn false;\n  \t\t}\n  \t}\n  \treturn true;\n}\n\nexport default MyPlayer;","import React, { useState, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport CardInactive from './CardInactive';\n\nfunction Discard(props) {\n\n    const [socket, setSocket] = useState(props.socket);\n    const [cards, setCards] = useState([]);\n    const [message, setMessage] = useState('');\n    const [winner, setWinner] = useState([]);\n    const [adding, setAdding] = useState(false);\n \n    useEffect(() => {\n        socket.on('flip discard', function(data) {\n            setCards(data.cards);\n            let temp = [];\n            for(let i = 0; i < data.cards.length; i++) {\n                if(i === data.max) {temp.push(true)}\n                else {temp.push(false)}\n            }\n            setWinner(temp);\n            setMessage('The trump suit is set to ' + data.suit);\n        });\n        socket.on('reveal discard', function(data) {\n            setCards(data.discard);\n            let temp = [];\n            data.discard.forEach(d => {\n                if(d.points > 0) {temp.push(true)}\n                else {temp.push(false)}\n            });\n            setWinner(temp);\n            setAdding(data.adding);\n            if(data.adding) {\n                setMessage('The opponents gained ' + data.addPoints + ' points.');\n            } else {\n                setMessage('');\n            }\n        });\n    });\n    //console.log(cards);\n\n    return (\n        <div id=\"discard-wrapper\" style={props.visible ? {display: 'flex'} : {display: 'none'}}>\n            <div id=\"discard\">\n                <h2>Discard Pile</h2>\n                <div id=\"discard-cards\">\n                    {cards.map((cd, i) => {\n                        return (\n                            <div className=\"card-inactive-wrapper\">\n                                <CardInactive cd={cd} key={cd.index} win={winner[i]}/>\n                            </div>\n                        );\n                    })}\n                </div>\n                <p id=\"discard-points\">{message}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Discard;","import React, { useState, useEffect, useRef } from 'react';\nimport Player from './components/Player';\nimport MyPlayer from './components/MyPlayer';\nimport Discard from './components/Discard';\n\nfunction GameSpace(props) {\n  const [started, setStarted] = useState(false);\n  const [socket, setSocket] = useState(props.socket);\n  const [message, setMessage] = useState({\n    body: '',\n    subtitle: '',\n    color: ''\n  });\n  const [discardVisible, setDiscard] = useState(false);\n  const playerId = useRef(null);\n  //let playerId;\n\n  useEffect(() => {\n      socket.on('user joined', function(data) {\n        setMessage({...message, subtitle: 'Active players: ' + data.players + '/4'});\n      });\n      socket.on('user left', function(data) {\n        setMessage({...message, subtitle: 'Active players: ' + data.players + '/4'});\n      });\n      socket.on('set playerId', function(id) {\n        playerId.current = id;\n      });\n      socket.on('my hand', function(data) {\n        setStarted(true);\n      });\n      socket.on('next turn', function(data) {\n        if(data.turn === playerId.current) {\n            setMessage({body: \"It's your turn!\",  color: 'green'});\n          } else {\n            setMessage({body: \"It's \" + data.usrnm + \"'s turn!\", color: ''});\n          }\n      });\n      socket.on('flip discard', function() {\n        revealDiscard();\n      });\n      socket.on('reveal discard', function() {\n        revealDiscard();\n      });\n      socket.on('end game', function(data) {\n        setMessage({body: data.msg, subtitle: data.subtitle, color: ''});\n        setStarted(false);\n      });\n  }, []);\n\n  const startGame = (evt) => {\n    evt.preventDefault();\n    setMessage({...message, body: 'Waiting...', color: ''});\n    setStarted(true);\n    socket.emit('start game', {});\n  }\n\n  const revealDiscard = () => {\n    setDiscard(true);\n    setTimeout(function() {\n      setDiscard(false);\n    }, 7000);\n  }\n\n  return (\n    <div className=\"game-space\">\n      {props.popUp ? \n        <div id=\"pop-up\">\n          <p id=\"pop-up-close\"><a href=\"#\" onClick={props.togglePop}>X</a></p>\n          <div id=\"pop-up-inner\">\n            <h1>Game History</h1>\n            <h3 className=\"yellow\">The team that was the Declarer each round is in yellow.</h3><br/>\n            {props.history.length > 0 ?\n              <table>\n                <tr>\n                  <th>Round</th>\n                  <th>{props.history[0].teams[0].usernames[0] + ' & ' + props.history[0].teams[0].usernames[1]}</th>\n                  <th>{props.history[0].teams[1].usernames[0] + ' & ' + props.history[0].teams[1].usernames[1]}</th>\n                  <th>Starter</th>\n                  <th>Trump Suit</th>\n                  <th>Points</th>\n                  <th>Winner</th>\n                </tr>\n                {props.history.map(game => {\n                  return (<tr>\n                    <td>{game.roundIndex}</td>\n                    <td className={game.declarer === 0 ? 'winner' : ''}>{game.teams[0].score}</td>\n                    <td className={game.declarer === 1 ? 'winner' : ''}>{game.teams[1].score}</td>\n                    <td>{game.starter}</td>\n                    <td>{game.trumpSuit}</td>\n                    <td>{game.points}</td>\n                    <td>{game.teams[game.winner].usernames[0] + ' & ' + game.teams[game.winner].usernames[1]}</td>\n                  </tr>);\n                })}\n                </table>\n                :\n                <p>No games yet.</p>\n              }\n          </div>\n        </div>\n        :\n        ''\n      }\n      <Discard socket={socket} visible={discardVisible} />\n      <div id=\"overlay\"></div>\n      <div id=\"header\">\n        <p className={\"center-msg \" + message.color}>{message.body}</p>\n        <h4 className={message.color}>{message.subtitle}</h4>\n      </div>\n      {playerId.current !== null ? <Player id=\"3\" socket={socket} main={playerId.current} /> : ''}\n      {playerId.current !== null ? <Player id=\"4\" socket={socket} main={playerId.current} /> : ''}\n      <div className=\"center\">\n        <input type=\"text\" value={props.code.current} id=\"code-box\" disabled />\n        {!started && props.userType.current === 'player' ?\n          <button id=\"start-game\" onClick={startGame}>{playerId.current !== null ? 'Start Next Round' : 'Start Game'}</button>\n          :\n          ''\n        }\n      </div>\n      {playerId.current !== null ? <Player id=\"2\" socket={socket} main={playerId.current}/> : ''}\n      {props.userType.current === 'player' ? <MyPlayer socket={socket} playerId={playerId.current} sendMessage={setMessage} /> : <Player id=\"1\" socket={socket} main={playerId.current} />}\n    </div>\n  );\n}\n\nexport default GameSpace;","import React, { useState, useEffect } from 'react';\n\nfunction GameStart(props) {\n\n\tconst [state, setState] = useState(0);\n\tconst [socket, setSocket] = useState(props.socket);\n\n\tconst showInstructions = () => {\n\t\tsetState(3);\n\t}\n\n\tif(state === 1) {\n\t\treturn <CreateGame setState={() => setState(0)} socket={socket} setRoom={props.setRoom} code={props.code} />;\n\t} else if(state === 2) {\n\t\treturn <JoinGame setState={() => setState(0)} socket={socket} setRoom={props.setRoom} code={props.code} />;\n\t} else if(state === 3) {\n\t\treturn <Instructions close={() => setState(0)} />;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"start-page\">\n\t\t\t\t<div className=\"game-start\">\n\t\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t\t<h2>Host</h2>\n\t\t\t\t\t\t<button onClick={() => setState(1)}>Create a Game</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"join-game\">\n\t\t\t\t\t\t<h2>Guest</h2>\n\t\t\t\t\t\t<button onClick={() => setState(2)}>Join a Game</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button id=\"instructions-btn\" onClick={showInstructions}>How to Play</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nfunction CreateGame(props) {\n\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [message, setMessage] = useState('');\n\tconst [settings, setSettings] = useState({\n\t\trank: 2,\n\t\tdecks: 2\n\t});\n\n\tconst changeRank = (evt) => {\n\t\tsetSettings({...settings, rank: evt.target.value});\n\t}\n\n\tconst changeDecks = (evt) => {\n\t\tsetSettings({...settings, decks: evt.target.value});\n\t}\n\n\tconst createGame = (evt) => {\n\t\tevt.preventDefault();\n\t\tif(settings.rank >= 2 && settings.rank <= 14) {\n\t\t\tif(settings.decks >= 1 && settings.decks <= 2) {\n\t\t\t\tsocket.emit('create game', settings, (res) => {\n\t\t\t\t\tprops.code.current = res;\n\t\t\t\t\tprops.setRoom(0);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetMessage('The number of decks must be between 1 and 2.');\n\t\t\t}\n\t\t} else {\n\t\t\tsetMessage('The trump rank must be between 2 and 14.');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"start-page\">\n\t\t\t<div className=\"game-start\">\n\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t<h2>Settings</h2>\n\t\t\t\t\t<form id=\"edit-settings\">\n\t\t              <label>Trump Rank</label><br/>\n\t\t               <input id=\"setTrumpValue\" name=\"setTrumpValue\" autoComplete=\"off\" defaultValue=\"2\" min=\"2\" max=\"14\" type=\"number\" onChange={changeRank}/><br/>\n\t\t               <label>Number of Decks</label><br/>\n\t\t               <input id=\"setDeckCount\" name=\"setDeckCount\" autoComplete=\"off\" defaultValue=\"2\" min=\"1\" max=\"2\" type=\"number\" onChange={changeDecks}/><br/>\n\t\t              <button onClick={createGame}>Create Game</button>\n\t\t            </form>\n\t\t            <p id=\"login-error\" className=\"error-message\">{message}</p>\n\t\t            <p><a href=\"#\" onClick={props.setState}>← BACK</a></p>\n\t            </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction JoinGame(props) {\n\n\tconst [socket, setSocket] = useState(props.socket);\n\tconst [message, setMessage] = useState('');\n\tconst [id, setID] = useState('');\n\n\tconst changeID = (evt) => {\n\t\tsetID(evt.target.value);\n\t}\n\n\tconst joinGame = (evt) => {\n\t\tevt.preventDefault();\n\t\tsocket.emit('join game', id, (res) => {\n\t\t\tif(res === 'success') {\n\t\t\t\tprops.code.current = id;\n\t\t\t\tprops.setRoom(0);\n\t\t\t} else {\n\t\t\t\tsetMessage('No game with that code found.');\n\t\t\t}\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"start-page\">\n\t\t\t<div className=\"game-start\">\n\t\t\t\t<h1>Sheng Ji</h1>\n\t\t\t\t<div className=\"create-game\">\n\t\t\t\t\t<h2>Game Code</h2>\n\t\t\t\t\t<form id=\"edit-settings\">\n\t\t              <input name=\"gameID\" autoComplete=\"off\" type=\"text\" onChange={changeID}/><br/>\n\t\t              <button onClick={joinGame}>Join Game</button>\n\t\t              <p id=\"login-error\" className=\"error-message\">{message}</p>\n\t\t            </form>\n\t\t            <p><a href=\"#\" onClick={props.setState}>← BACK</a></p>\n\t            </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Instructions(props) {\n\tconst close = () => {\n\t\tprops.close();\n\t}\n\n\treturn (\n\t\t<div id=\"instructions\">\n\t        <p id=\"instructions-close\" onClick={close}><a href=\"#\">X</a></p>\n\t        <h1>Rules</h1>\n\t        \n\t        <h3>Players and Cards</h3>\n\t        <p>Sheng Ji is a game played by four players in fixed teams, with partners facing each other across the table. A standard international pack is used, with red and black jokers, making 54 cards in all. The point values of the cards are as follows:</p>\n\t        <table>\n\t\t        <tr>\n\t\t\t        <td>Each King</td>\n\t\t\t        <td>10 points</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Each ten</td>\n\t\t        \t<td>10 points</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Each five </td>\n\t\t        \t<td>5 points,</td> \n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>Other cards</td>\n\t\t        \t<td>no value</td> \n\t\t        </tr>\n\t        </table>\n\t        <h3>Ranking of Cards</h3>\n\t        <p>In each hand there are eighteen trumps: the two jokers, all the cards of a particular suit (the trump suit) and all the cards of a particular rank (the trump rank). The highest trump is the red Joker, second is the black Joker, and third is the card which belongs to both the trump suit and the trump rank. Next come the other three cards of the trump rank, which are equal in status. Finally there are the remaining cards of the trump suit which rank in downwards order A, K, Q, J, 10, 9, 8, 7, 6, 5, 4, 3, 2 (omitting the trump rank). The three remaining suits also rank from highest to lowest omitting the trump rank.</p>\n\n\t        <h3>Declarers and Opponents</h3>\n\t        <p>In each game one team is the Declarers, and the other are the Opponents. The Declarers are the winners of the previous game. Each team's score is expressed as a card rank from two (low) up to Ace (high). In each game the trump rank is the Declarers' current score. Both sides start at two and the winners are the first side whose score goes above Ace.</p>\n\t        <p>In each game, one of the Declarers is designated the starter. They will get to start the first round of the game. Additionally, before the game starts, the starter gets the 6 leftover cards after the cards have been dealed. They then get to choose 6 cards from their own hand to discard. No other players get to see these cards. These cards will become important after the game is finished.</p>\n\n\n\t        <h3>The Deal</h3>\n\t\t\t<p>Each player receives twelve cards, but there is no dealer as such. The trump suit is picked during the dealing.</p>\n\n\t\t\t<p>The trump rank for the hand is known in advance of the deal: for the first hand it must be two because both sides start with a score of two, and in subsequent hands it is the current score of the declarers. Any player who draws a card of the trump rank during the deal may place it face up on the table, and its suit then becomes trumps for the hand. If you draw a card of the trump rank you need not show it immediately you draw it; you may keep it and expose at at any time provided that no other card has yet been exposed, or you may prefer never to expose it if you do not want its suit as trumps. Consultation between partners is not allowed.</p>\n\n\t\t\t<p>After each player has drawn a hand of twelve cards there are six face-down cards left over. If no one has yet exposed a card, the starter turns these cards face up one at a time in order. Once the first of these cards is exposed it is too late for anyone to determine the trump suit by exposing one of their own cards. If a card of the trump rank is found among the last six cards, its suit becomes trumps and no further cards are turned up. If no card of the trump rank appears, the highest ranking of the six cards, excluding Jokers, determines the trump suit; among cards of equal rank the earliest exposed takes precedence.</p>\n\n\t\t\t<p>In the first hand whichever player exposes a two (or the starter in the unlikely event that no one does) becomes the leader, and the leader’s side become the declarers. In subsequent hands the leader is the same player as the starter. In either case the leader picks up the last six cards and adds them to his hand. Apart from any of these cards which may already have been exposed in order to choose trumps, the cards picked up are not shown to the other players. The leader then discards any six of his eighteen cards face down.</p>\n\n\t        <h3>The Play</h3>\n\t        <p>During the play, Jokers and cards of the trump rank all count as belonging to the trump suit, not to the suits marked on them. </p>\n\n\t        <p>Play is in counter-clockwise rotation. In the first round, the first person to play their cards is the starter; in each subsequent round, the first person to play is the winner of the previous round. Each of the other three players in turn must play a card in the same suit as the person who started, unless they have run out of cards of the suit, then they may play any cards in their hand. If playing the trump suit, among trumps of equal rank, the one which is played earliest beats the others. When playing different suits, the trump suit will beat the other suits. If everyone plays different non-trump suits, then the highest card in the suit the first person played wins.</p>\n\n\t        <p>The goal of the game is to win rounds containing points, that is kings, tens and fives. Whenever the Opponents win a round containing any point cards, they accumulate the amount of points in the cards. When the Declarers win a round, they do not accumulate points but prevent the Opponents from winning points.</p>\n\n\t        <h3>Scoring</h3>\n\t        <p>The result of the game depends on the number of card points won by the Opponents. This determines which side scores how many points, and who will be the Declarers for the next hand.</p>\n\t        <p>If the Opponents win the last round of the game, any point cards in the discard pile get added to the Opponents' points. Moreover, the value of each point card in the discard pile is doubled.</p>\n\t        <table>\n\t\t        <tr>\n\t\t        \t<th>Points</th>\n\t\t        \t<th>Score</th>\n\t\t        \t<th>Declarers for next hand</th>\n\t\t        \t<th>Starter for next hand</th>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>0</td>\n\t\t        \t<td>Declarers score 2</td>\n\t\t        \t<td>No change</td>\n\t\t        \t<td>Previous starter's partner</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>5 to 35</td>\n\t\t        \t<td>Declarers score 1</td>\n\t\t        \t<td>No change</td>\n\t\t        \t<td>Previous starter's partner</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>40 to 75</td>\n\t\t        \t<td>Opponents score 1</td>\n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>80 to 95</td>\n\t\t        \t<td>Opponents score 2</td> \n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t\t        <tr>\n\t\t        \t<td>100 or more</td> \n\t\t        \t<td>Opponents score 3</td>\n\t\t        \t<td>Opponents become new declarers</td>\n\t\t        \t<td>Player to previous starter's right</td>\n\t\t        </tr>\n\t        </table>\n    \t</div>\n\t);\n}\n\nexport {GameStart, Instructions};","import React, { useState, useEffect } from 'react';\nimport {GameStart} from './components/GameStart';\n\nfunction StartPage(props) {\n\n    const [socket, setSocket] = useState(props.socket);\n    const [message, setMessage] = useState('');\n    const [state, setState] = useState(-1);\n    const [username, setUsername] = useState('');\n    const [teams, setTeams] = useState([{usernames: []}, {usernames: []}]);\n\n    useEffect(() => {\n        socket.on('set teams', function(tms) {\n            setTeams(teams => tms);\n        });\n    }, []);\n\n    const changeUsername = (evt) => {\n        setUsername(evt.target.value);\n    }\n\n    const loginSubmit = (evt) => {\n        evt.preventDefault();\n        if(username !== '' && username.replace(/\\s/g, '').length) {\n            socket.emit('add user', username, (res) => {\n                if(res === 'success') {\n                    props.setUsername(username);\n                    setState(1);\n                    setMessage('');\n                } else if(res === 'return') {\n                    props.setUserType(0);\n                    props.finished(username);\n                } else {\n                    setMessage(res);\n                }\n            });\n        } else {\n            setMessage('Please enter a valid username.');\n        }\n    }\n\n    const playerSettings = (type) => {\n        socket.emit('user type', type, (res) => {\n            if(res === 'player') {\n                setState(2);\n                props.setUserType(0);\n                setMessage('');\n            } else if(res === 'spectator') {\n                props.setUserType(1);\n                props.finished(username);\n            } else {\n                setMessage(res);\n            }\n        });\n    }\n\n    const setTeam = (team) => {\n        socket.emit('set team', team, (res) => {\n            if(res === 'success') {\n                props.finished(username);\n            } else {\n                setMessage(res);\n            }\n        });\n    }\n\n    if(state === -1) {\n        return (\n            <GameStart socket={socket} setRoom={setState} code={props.code} />\n        );\n    } else if(state === 0) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"registration\">\n                    <h1>Sheng Ji</h1>\n                    <h3 id=\"start-code\">{props.code.current}</h3>\n                    <form id=\"create-user\">\n                        <label>Username</label><br/>\n                        <input id=\"username\" name=\"username\" autoComplete=\"off\" type=\"text\" value={username} onChange={changeUsername} />\n                        <button onClick={loginSubmit}>Submit</button>\n                    </form>\n                    <p id=\"login-error\" className=\"error-message\">{message}</p>\n                </div>\n                    \n            </div>\n        );\n    } else if(state === 1) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"game-settings\">\n                    <div id=\"game-settings-player\">\n                        <h1>Sheng Ji</h1>\n                        <h3 id=\"start-code\">{props.code.current}</h3>\n                        <h2>Would you like to join the game as a player or a spectator?</h2>\n                        <button id='join-player' onClick={() => playerSettings('player')} >Player</button>\n                        <button id='join-spectator' onClick={() => playerSettings('spectator')}>Spectator</button>\n                        <p id=\"setting-error\" className=\"error-message\">{message}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if(state === 2) {\n        return (\n            <div className=\"start-page\">\n                <div id=\"game-settings\">\n                    <div id=\"team\">\n                        <h1>Sheng Ji</h1>\n                        <h3 id=\"start-code\">{props.code.current}</h3>\n                        <h2 id=\"team-header\">Which team would you like to join?</h2>\n                        <div id=\"team-container\">\n                            <div id=\"declarers\" onClick={() => setTeam(0)}>\n                                <h3>Declarers</h3>\n                                <div><ul>{teams[0].usernames.length > 0 ? teams[0].usernames.map(nm => <li>{nm}</li>) : <li>No players yet</li>}</ul></div>\n                            </div>\n                            <div id=\"opponents\" onClick={() => setTeam(1)}>\n                                <h3>Opponents</h3>\n                                <div><ul>{teams[1].usernames.length > 0 ? teams[1].usernames.map(nm => <li>{nm}</li>) : <li>No players yet</li>}</ul></div>\n                            </div>\n                        </div>\n                        <p id=\"team-error\" className=\"error-message\">{message}</p>\n                    </div>  \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StartPage;","import React, { useState, useEffect, useRef } from 'react';\nimport './styles/main.scss';\nimport Card from './components/Card';\nimport Chat from './Chat';\nimport GameSpace from './GameSpace';\nimport StartPage from './StartPage';\nimport {Instructions} from './components/GameStart';\nimport socketIOClient from 'socket.io-client';\nimport Div100vh from 'react-div-100vh';\nconst ENDPOINT = 'http://localhost:8888/';\nconst socket = socketIOClient();\n\nfunction App() {\n\n  const [popUp, setPopUp] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [help, setHelp] = useState(false);\n  const [login, setLogin] = useState({\n    username: '',\n    loggedIn: false\n  });\n  const [gameDetails, setGame] = useState({\n    trumpSuit: '',\n    trumpRank: null,\n    points: 0\n  });\n  const [portrait, setPortrait] = useState(false);\n  const [chatOpen, setChat] = useState(false);\n  const userType = useRef('');\n  const code = useRef('');\n\n  useEffect(() => {\n    if(window.innerWidth < window.innerHeight) {\n      setPortrait(true);\n    }\n    socket.on('setup game', function(data) {\n      setGame({...gameDetails, trumpRank: data.trumpValue});\n    });\n    socket.on('trump set', function(data) {\n      setGame({...gameDetails, trumpSuit: data.suit, trumpRank: data.rank});\n    });\n    socket.on('set trump', function(suit) {\n      setGame({...gameDetails, trumpSuit: suit});\n    });\n    socket.on('update points', function(pts) {\n      setGame(gameDetails => {return {...gameDetails, points: pts}});\n    });\n    socket.on('disconnected', function() {\n      alert('You have disconnected from the server. Please refresh your page.');\n    });\n  }, []);\n\n  const finishSetup = (usr) => {\n    setLogin({username: usr, loggedIn: true});\n  }\n\n  const setUsername = (usr) => {\n    setLogin({username: usr, loggedIn: login.loggedIn});\n  }\n\n  const setUserType = (number) => {\n    if(number === 0) {\n      userType.current = 'player';\n    } else {\n      userType.current = 'spectator';\n    }\n  }\n\n  const togglePop = () => {\n    setPopUp(false);\n  }\n\n  const getGameHistory = (evt) => {\n    socket.emit('get game history', {}, (res) => {\n      setGameHistory(res);\n    });\n    setPopUp(true);\n  }\n\n  return (\n    <Div100vh>\n      <div className=\"App\">\n        {login.loggedIn ? '' : <Div100vh><StartPage username={login.username} socket={socket} setUsername={setUsername} setUserType={setUserType} finished={finishSetup} code={code} /></Div100vh>}\n        {help ? <Div100vh><Instructions close={() => setHelp(false)} /></Div100vh> : ''}\n        <Div100vh>\n          <div id=\"chat-page\">\n            <div className=\"sidebar\">\n              <div className=\"legend\">\n                <div>\n                  <h2>Trump Suit</h2>\n                  <p id=\"trump-suit\">{gameDetails.trumpSuit ? <img src={process.env.PUBLIC_URL + \"/\" + gameDetails.trumpSuit + \".png\"} /> : '?'} </p>\n                </div>\n                <div>\n                  <h2>Trump Rank</h2>\n                  <p id=\"trump-rank\">{gameDetails.trumpRank ? gameDetails.trumpRank : ''}</p>\n                </div>\n                <div>\n                  <h2>Points</h2>\n                  <p id=\"points\">{gameDetails.points}</p>\n                </div>\n                <div>\n                  <h2>Game<br/>History</h2>\n                  <p><a id=\"game-history\" href=\"#\" onClick={getGameHistory}>View</a></p>\n                </div>\n              </div>\n              <div id=\"my-player-stats\">\n                  <h3 id=\"my-username\">{login.username}</h3>\n                  {/*<p>My Score: <span id=\"my-score\"></span></p>*/}\n                  <p><a href=\"#\" id=\"help-link\" style={{fontSize:'10px'}} onClick={() => setHelp(true)}>Help</a></p>\n                </div>\n              </div>\n            <GameSpace socket={socket} popUp={popUp} togglePop={togglePop} history={gameHistory} userType={userType} code={code} />\n            <ChatIcon handleClick={() => setChat(!chatOpen)} socket={socket} status={chatOpen}/>\n            <Chat socket={socket} username={login.username} portrait={portrait} status={chatOpen}/>\n          </div>\n        </Div100vh>\n      </div>\n    </Div100vh>\n  );\n}\n\nfunction ChatIcon(props) {\n\n  const [socket, setSocket] = useState(props.socket);\n  const [notif, setNotif] = useState(false);\n\n  useEffect(() => {\n    socket.on('chat message', function(msg){ \n      if(!props.status) {\n        setNotif(true);\n      } else {\n        setNotif(false);\n      }\n    });\n    if(props.status) {\n      setNotif(false);\n    }\n  }, [props.status]);\n\n  return (\n    <div id=\"chat-icon\" onClick={props.handleClick}>\n      {notif ? <div id=\"chat-notif\"></div> : ''}\n      <img src={process.env.PUBLIC_URL + '/chaticon.png'} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}